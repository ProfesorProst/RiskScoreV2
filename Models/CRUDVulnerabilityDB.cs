using DependencyCheck.Data;
using DependencyCheck.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace RiskScore.Models
{
    class CRUDVulnerabilityDB
    {
        Context context;

        public CRUDVulnerabilityDB()
        {
            context = new Context();
        }

        public void Create(VulnerabilityDB vulnerabilityDB)
        {
            context = new Context();
            context.vulnerabilityDBs.Add(vulnerabilityDB);
            context.SaveChanges();
        }

        public void Update(VulnerabilityDB obj)
        {
            context = new Context();
            var entity = context.vulnerabilityDBs.Find(obj.id);
            if (entity == null)
                return;

            context.Entry(entity).CurrentValues.SetValues(obj);
            context.SaveChanges();
            return;
        }

        public void Delet(VulnerabilityDB obj)
        {
            context = new Context();
            obj = context.vulnerabilityDBs.Find(obj.id);
            if (obj == null)
                return;
            context.vulnerabilityDBs.Remove(obj);
            context.SaveChanges();
        }

        public VulnerabilityDB Read(long id)
        {
            return context.vulnerabilityDBs.Find(id);
        }

        public List<VulnerabilityDB> GetObjects()
        {
            return context.vulnerabilityDBs.ToList();
        }
    }
}
